# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file '/Users/miguellopez/Desktop/PROYECTS/PAGOS/ARENERO-RAMIRO/FRONTEND/views/QT_DESIGNS/designs/main.ui'
#
# Created by: PyQt5 UI code generator 5.15.7
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QMessageBox

from FRONTEND.views import icons
from FRONTEND.views import register
from FRONTEND.views.constantsAndOthers import placeholders
# from BACKEND.CRUD.CRUD_local_storage import CrudLocalStorage
from BACKEND.CRUD.CRUD_users import *

from functools import reduce

users = CrudLocalStorage.getUsers()
usersResultedFromSearch = list()
# usersIndexes = list()

class UiMainWindow(object):
    def setupUi(self, mainWindow):
        mainWindow.setObjectName("mainWindow")
        mainWindow.resize(1250, 778)
        mainWindow.setMinimumSize(QtCore.QSize(1250, 700))
        mainWindow.setBaseSize(QtCore.QSize(1250, 700))
        font = QtGui.QFont()
        font.setPointSize(18)
        mainWindow.setFont(font)
        mainWindow.setStyleSheet("background: #ffe483;")
        mainWindow.setDockOptions(
            QtWidgets.QMainWindow.AllowTabbedDocks | QtWidgets.QMainWindow.AnimatedDocks | QtWidgets.QMainWindow.GroupedDragging | QtWidgets.QMainWindow.VerticalTabs)
        mainWindow.setUnifiedTitleAndToolBarOnMac(True)
        self.centralwidget = QtWidgets.QWidget(mainWindow)
        font = QtGui.QFont()
        font.setPointSize(18)
        self.centralwidget.setFont(font)
        self.centralwidget.setObjectName("centralwidget")
        self.verticalLayout_3 = QtWidgets.QVBoxLayout(self.centralwidget)
        self.verticalLayout_3.setObjectName("verticalLayout_3")
        spacerItem = QtWidgets.QSpacerItem(20, 60, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        self.verticalLayout_3.addItem(spacerItem)
        self.headerLayout = QtWidgets.QHBoxLayout()
        self.headerLayout.setObjectName("headerLayout")
        self.searchRecordContainerLayout = QtWidgets.QVBoxLayout()
        self.searchRecordContainerLayout.setObjectName("searchRecordContainerLayout")
        spacerItem1 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        self.searchRecordContainerLayout.addItem(spacerItem1)
        self.searchRecordLayout = QtWidgets.QHBoxLayout()
        self.searchRecordLayout.setSpacing(20)
        self.searchRecordLayout.setObjectName("searchRecordLayout")
        self.searchLineEdit = QtWidgets.QLineEdit(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.searchLineEdit.sizePolicy().hasHeightForWidth())
        self.searchLineEdit.setSizePolicy(sizePolicy)
        self.searchLineEdit.setMinimumSize(QtCore.QSize(466, 32))
        self.searchLineEdit.setMaximumSize(QtCore.QSize(466, 32))
        self.searchLineEdit.setMouseTracking(True)
        self.searchLineEdit.setFocusPolicy(QtCore.Qt.StrongFocus)
        self.searchLineEdit.setStyleSheet("QLineEdit{\n"
                                          "    background-color: #ffffff;\n"
                                          "    border: 1px rounded #232323;\n"
                                          "    border-radius: 12px;\n"
                                          "    border-style: outset;\n"
                                          "    font-family: \"Helvetica\";\n"
                                          "    font-weight: 400;\n"
                                          "    font-size: 18px;\n"
                                          "    text-align: left;\n"
                                          "padding-left: 10px;\n"
                                          "color:#000000;\n"
                                          "}\n"
                                          "\n"
                                          "")
        self.searchLineEdit.setText("")
        self.searchLineEdit.setFrame(False)
        self.searchLineEdit.setReadOnly(False)
        self.searchLineEdit.setClearButtonEnabled(True)
        self.searchLineEdit.setObjectName("searchLineEdit")
        self.searchRecordLayout.addWidget(self.searchLineEdit)
        self.searchRecordParameterComboBox = QtWidgets.QComboBox(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.searchRecordParameterComboBox.sizePolicy().hasHeightForWidth())
        self.searchRecordParameterComboBox.setSizePolicy(sizePolicy)
        self.searchRecordParameterComboBox.setMinimumSize(QtCore.QSize(140, 32))
        self.searchRecordParameterComboBox.setMaximumSize(QtCore.QSize(140, 32))
        self.searchRecordParameterComboBox.setStyleSheet("QComboBox {\n"
                                                         "    border: 2px rounded;\n"
                                                         "    border-radius: 8px;\n"
                                                         "    border-style: outset;   \n"
                                                         "    border-color: rgb(57, 57, 57);\n"
                                                         "    padding: 5px 18px 5px 5px;   \n"
                                                         "    background-color:#ffffff;\n"
                                                         "     color:#000000;\n"
                                                         "}\n"
                                                         "\n"
                                                         "QComboBox QAbstractItemView::item{\n"
                                                         "    background-color: #ffffff; \n"
                                                         "}\n"
                                                         "\n"
                                                         "QComboBox QAbstractItemView::item:hover {\n"
                                                         "    color: #ffffff;\n"
                                                         "}")
        self.searchRecordParameterComboBox.setObjectName("searchRecordParameterComboBox")
        self.searchRecordParameterComboBox.addItem("")
        self.searchRecordParameterComboBox.addItem("")
        self.searchRecordParameterComboBox.addItem("")
        self.searchRecordParameterComboBox.addItem("")
        self.searchRecordParameterComboBox.addItem("")
        self.searchRecordParameterComboBox.addItem("")
        self.searchRecordParameterComboBox.addItem("")
        self.searchRecordParameterComboBox.addItem("")
        self.searchRecordParameterComboBox.addItem("")
        self.searchRecordParameterComboBox.addItem("")
        self.searchRecordParameterComboBox.addItem("")
        self.searchRecordParameterComboBox.addItem("")
        self.searchRecordParameterComboBox.addItem("")
        self.searchRecordLayout.addWidget(self.searchRecordParameterComboBox)
        self.searchRecordPushButton = QtWidgets.QPushButton(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.searchRecordPushButton.sizePolicy().hasHeightForWidth())
        self.searchRecordPushButton.setSizePolicy(sizePolicy)
        self.searchRecordPushButton.setMinimumSize(QtCore.QSize(50, 32))
        self.searchRecordPushButton.setMaximumSize(QtCore.QSize(50, 32))
        font = QtGui.QFont()
        font.setPointSize(15)
        font.setBold(True)
        font.setWeight(75)
        self.searchRecordPushButton.setFont(font)
        self.searchRecordPushButton.setStyleSheet("QPushButton{\n"
                                                  "    padding: 0px 10px 0px 10px;\n"
                                                  "    background: rgb(87, 197, 255);\n"
                                                  "    color: #ffffff;\n"
                                                  "    border:1px rounded #232323;\n"
                                                  "    border-radius: 10px;\n"
                                                  "    border-style: outset;\n"
                                                  "}\n"
                                                  "\n"
                                                  "QPushButton:hover {\n"
                                                  "    background: rgb(77, 123, 248);\n"
                                                  "    }\n"
                                                  "\n"
                                                  "QPushButton:pressed {\n"
                                                  "    border-style: inset;\n"
                                                  "    background: rgb(214, 218, 218);\n"
                                                  "    }")
        self.searchRecordPushButton.setText("")
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap(":/usedIcons/icons8-children-30.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.searchRecordPushButton.setIcon(icon)
        self.searchRecordPushButton.setIconSize(QtCore.QSize(24, 24))
        self.searchRecordPushButton.setObjectName("searchRecordPushButton")
        self.searchRecordLayout.addWidget(self.searchRecordPushButton)
        self.searchRecordContainerLayout.addLayout(self.searchRecordLayout)
        self.headerLayout.addLayout(self.searchRecordContainerLayout)
        self.crudContainerLayout = QtWidgets.QVBoxLayout()
        self.crudContainerLayout.setObjectName("crudContainerLayout")
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        spacerItem2 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_2.addItem(spacerItem2)
        self.crudLabel_2 = QtWidgets.QLabel(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.crudLabel_2.sizePolicy().hasHeightForWidth())
        self.crudLabel_2.setSizePolicy(sizePolicy)
        self.crudLabel_2.setMinimumSize(QtCore.QSize(333, 44))
        self.crudLabel_2.setMaximumSize(QtCore.QSize(333, 44))
        font = QtGui.QFont()
        font.setPointSize(17)
        font.setBold(False)
        font.setWeight(50)
        self.crudLabel_2.setFont(font)
        self.crudLabel_2.setStyleSheet("background:#ffffff;\n"
                                       "border:1px rounded;\n"
                                       "border-radius: 10px;\n"
                                       "color:#000000;")
        self.crudLabel_2.setMidLineWidth(-1)
        self.crudLabel_2.setAlignment(QtCore.Qt.AlignCenter)
        self.crudLabel_2.setWordWrap(True)
        self.crudLabel_2.setObjectName("crudLabel_2")
        self.horizontalLayout_2.addWidget(self.crudLabel_2)
        spacerItem3 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_2.addItem(spacerItem3)
        self.crudContainerLayout.addLayout(self.horizontalLayout_2)
        self.crudLayout = QtWidgets.QHBoxLayout()
        self.crudLayout.setObjectName("crudLayout")
        self.crud_recordPushButton = QtWidgets.QPushButton(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.crud_recordPushButton.sizePolicy().hasHeightForWidth())
        self.crud_recordPushButton.setSizePolicy(sizePolicy)
        self.crud_recordPushButton.setMinimumSize(QtCore.QSize(113, 32))
        self.crud_recordPushButton.setMaximumSize(QtCore.QSize(113, 32))
        self.crud_recordPushButton.setStyleSheet("QPushButton{\n"
                                                 "    padding: 0px 10px 0px 10px;\n"
                                                 "    background: #e0d1bd;\n"
                                                 "    color: #232323;\n"
                                                 "    border:1px rounded #232323;\n"
                                                 "    border-radius: 10px;\n"
                                                 "    border-style: outset;\n"
                                                 "}\n"
                                                 "\n"
                                                 "QPushButton:hover {\n"
                                                 "    background-color:rgb(187, 179, 155);\n"
                                                 "    }\n"
                                                 "\n"
                                                 "QPushButton:pressed {\n"
                                                 "    border-style: inset;\n"
                                                 "    background: rgb(214, 218, 218);\n"
                                                 "    }")
        icon1 = QtGui.QIcon()
        icon1.addPixmap(QtGui.QPixmap(":/usedIcons/icons8-pen-64.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.crud_recordPushButton.setIcon(icon1)
        self.crud_recordPushButton.setIconSize(QtCore.QSize(20, 20))
        self.crud_recordPushButton.setObjectName("crud_recordPushButton")
        self.crudLayout.addWidget(self.crud_recordPushButton)
        self.crud_editPushButton = QtWidgets.QPushButton(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.crud_editPushButton.sizePolicy().hasHeightForWidth())
        self.crud_editPushButton.setSizePolicy(sizePolicy)
        self.crud_editPushButton.setMinimumSize(QtCore.QSize(95, 32))
        self.crud_editPushButton.setMaximumSize(QtCore.QSize(95, 32))
        self.crud_editPushButton.setStyleSheet("QPushButton{\n"
                                               "    padding: 0px 10px 0px 10px;\n"
                                               "    background: #e0d1bd;\n"
                                               "    color: #232323;\n"
                                               "    border:1px rounded #232323;\n"
                                               "    border-radius: 10px;\n"
                                               "    border-style: outset;\n"
                                               "}\n"
                                               "\n"
                                               "QPushButton:hover {\n"
                                               "    background-color:rgb(187, 179, 155);\n"
                                               "    }\n"
                                               "\n"
                                               "QPushButton:pressed {\n"
                                               "    border-style: inset;\n"
                                               "    background: rgb(214, 218, 218);\n"
                                               "    }")
        icon2 = QtGui.QIcon()
        icon2.addPixmap(QtGui.QPixmap(":/usedIcons/icons8-edit-64.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.crud_editPushButton.setIcon(icon2)
        self.crud_editPushButton.setIconSize(QtCore.QSize(18, 18))
        self.crud_editPushButton.setObjectName("crud_editPushButton")
        self.crudLayout.addWidget(self.crud_editPushButton)
        self.crudContainerLayout.addLayout(self.crudLayout)
        self.headerLayout.addLayout(self.crudContainerLayout)
        self.verticalLayout_3.addLayout(self.headerLayout)
        self.bodyFrame = QtWidgets.QFrame(self.centralwidget)
        self.bodyFrame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.bodyFrame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.bodyFrame.setObjectName("bodyFrame")
        self.horizontalLayout = QtWidgets.QHBoxLayout(self.bodyFrame)
        self.horizontalLayout.setContentsMargins(15, 15, 15, 15)
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.recordsTableWidget = QtWidgets.QTableWidget(self.bodyFrame)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.recordsTableWidget.sizePolicy().hasHeightForWidth())
        self.recordsTableWidget.setSizePolicy(sizePolicy)
        self.recordsTableWidget.setMinimumSize(QtCore.QSize(1195, 370))
        self.recordsTableWidget.setAutoFillBackground(True)
        self.recordsTableWidget.setStyleSheet("::section{\n"
                                              "    background-color: rgb(187, 80, 35);\n"
                                              "    color:rgb(255, 255, 255);\n"
                                              "}\n"
                                              "\n"
                                              "QTableWidget{\n"
                                              "    font-size: 15pt \".AppleSystemUIFont\";\n"
                                              "    background-color: rgb(255, 255, 255);\n"
                                              "    color:#000000;"
                                              "}")
        self.recordsTableWidget.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.recordsTableWidget.setHorizontalScrollBarPolicy(QtCore.Qt.ScrollBarAsNeeded)
        self.recordsTableWidget.setSizeAdjustPolicy(QtWidgets.QAbstractScrollArea.AdjustToContentsOnFirstShow)
        self.recordsTableWidget.setAutoScroll(True)
        self.recordsTableWidget.setEditTriggers(QtWidgets.QAbstractItemView.EditKeyPressed)
        self.recordsTableWidget.setTabKeyNavigation(False)
        self.recordsTableWidget.setProperty("showDropIndicator", False)
        self.recordsTableWidget.setDragDropOverwriteMode(False)
        self.recordsTableWidget.setDefaultDropAction(QtCore.Qt.TargetMoveAction)
        self.recordsTableWidget.setSelectionMode(QtWidgets.QAbstractItemView.SingleSelection)
        self.recordsTableWidget.setSelectionBehavior(QtWidgets.QAbstractItemView.SelectRows)
        self.recordsTableWidget.setTextElideMode(QtCore.Qt.ElideNone)
        self.recordsTableWidget.setHorizontalScrollMode(QtWidgets.QAbstractItemView.ScrollPerItem)
        self.recordsTableWidget.setGridStyle(QtCore.Qt.SolidLine)
        self.recordsTableWidget.setWordWrap(True)
        self.recordsTableWidget.setCornerButtonEnabled(False)
        self.recordsTableWidget.setColumnCount(10)
        self.recordsTableWidget.setObjectName("recordsTableWidget")
        # self.recordsTableWidget.setRowCount(1)
        # item = QtWidgets.QTableWidgetItem()
        # font = QtGui.QFont()
        # font.setPointSize(15)
        # item.setFont(font)
        # self.recordsTableWidget.setVerticalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        item.setTextAlignment(QtCore.Qt.AlignCenter)
        font = QtGui.QFont()
        font.setPointSize(15)
        font.setBold(True)
        font.setWeight(75)
        item.setFont(font)
        item.setBackground(QtGui.QColor(187, 80, 35))
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.NoBrush)
        item.setForeground(brush)
        self.recordsTableWidget.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        item.setTextAlignment(QtCore.Qt.AlignCenter)
        font = QtGui.QFont()
        font.setPointSize(15)
        font.setBold(True)
        font.setWeight(75)
        item.setFont(font)
        item.setBackground(QtGui.QColor(187, 80, 35))
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.NoBrush)
        item.setForeground(brush)
        self.recordsTableWidget.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        item.setTextAlignment(QtCore.Qt.AlignCenter)
        font = QtGui.QFont()
        font.setPointSize(15)
        font.setBold(True)
        font.setWeight(75)
        item.setFont(font)
        item.setBackground(QtGui.QColor(187, 80, 35))
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.NoBrush)
        item.setForeground(brush)
        self.recordsTableWidget.setHorizontalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        item.setTextAlignment(QtCore.Qt.AlignCenter)
        font = QtGui.QFont()
        font.setPointSize(15)
        font.setBold(True)
        font.setWeight(75)
        item.setFont(font)
        item.setBackground(QtGui.QColor(187, 80, 35))
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.NoBrush)
        item.setForeground(brush)
        self.recordsTableWidget.setHorizontalHeaderItem(3, item)
        item = QtWidgets.QTableWidgetItem()
        item.setTextAlignment(QtCore.Qt.AlignCenter)
        font = QtGui.QFont()
        font.setPointSize(15)
        font.setBold(True)
        font.setWeight(75)
        item.setFont(font)
        item.setBackground(QtGui.QColor(187, 80, 35))
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.NoBrush)
        item.setForeground(brush)
        self.recordsTableWidget.setHorizontalHeaderItem(4, item)
        item = QtWidgets.QTableWidgetItem()
        item.setTextAlignment(QtCore.Qt.AlignCenter)
        font = QtGui.QFont()
        font.setPointSize(15)
        font.setBold(True)
        font.setWeight(75)
        item.setFont(font)
        item.setBackground(QtGui.QColor(187, 80, 35))
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.NoBrush)
        item.setForeground(brush)
        self.recordsTableWidget.setHorizontalHeaderItem(5, item)
        item = QtWidgets.QTableWidgetItem()
        item.setTextAlignment(QtCore.Qt.AlignCenter)
        font = QtGui.QFont()
        font.setPointSize(15)
        font.setBold(True)
        font.setWeight(75)
        item.setFont(font)
        item.setBackground(QtGui.QColor(187, 80, 35))
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.NoBrush)
        item.setForeground(brush)
        self.recordsTableWidget.setHorizontalHeaderItem(6, item)
        item = QtWidgets.QTableWidgetItem()
        item.setTextAlignment(QtCore.Qt.AlignCenter)
        font = QtGui.QFont()
        font.setPointSize(15)
        font.setBold(True)
        font.setWeight(75)
        item.setFont(font)
        item.setBackground(QtGui.QColor(187, 80, 35))
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        item.setForeground(brush)
        self.recordsTableWidget.setHorizontalHeaderItem(7, item)
        item = QtWidgets.QTableWidgetItem()
        item.setTextAlignment(QtCore.Qt.AlignCenter)
        font = QtGui.QFont()
        font.setPointSize(15)
        font.setBold(True)
        font.setWeight(75)
        item.setFont(font)
        item.setBackground(QtGui.QColor(187, 80, 35))
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        item.setForeground(brush)
        self.recordsTableWidget.setHorizontalHeaderItem(8, item)
        item = QtWidgets.QTableWidgetItem()
        item.setTextAlignment(QtCore.Qt.AlignCenter)
        font = QtGui.QFont()
        font.setPointSize(15)
        font.setBold(True)
        font.setWeight(75)
        item.setFont(font)
        item.setBackground(QtGui.QColor(187, 80, 35))
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        item.setForeground(brush)
        self.recordsTableWidget.setHorizontalHeaderItem(9, item)
        # item = QtWidgets.QTableWidgetItem()
        # brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        # brush.setStyle(QtCore.Qt.SolidPattern)
        # item.setBackground(brush)
        # self.recordsTableWidget.setItem(0, 0, item)
        # item = QtWidgets.QTableWidgetItem()
        # item.setTextAlignment(QtCore.Qt.AlignCenter)
        # brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        # brush.setStyle(QtCore.Qt.SolidPattern)
        # item.setBackground(brush)
        # self.recordsTableWidget.setItem(0, 1, item)
        # item = QtWidgets.QTableWidgetItem()
        # item.setTextAlignment(QtCore.Qt.AlignCenter)
        # brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        # brush.setStyle(QtCore.Qt.SolidPattern)
        # item.setBackground(brush)
        # self.recordsTableWidget.setItem(0, 2, item)
        # item = QtWidgets.QTableWidgetItem()
        # item.setTextAlignment(QtCore.Qt.AlignCenter)
        # brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        # brush.setStyle(QtCore.Qt.SolidPattern)
        # item.setBackground(brush)
        # self.recordsTableWidget.setItem(0, 3, item)
        # item = QtWidgets.QTableWidgetItem()
        # item.setTextAlignment(QtCore.Qt.AlignCenter)
        # brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        # brush.setStyle(QtCore.Qt.SolidPattern)
        # item.setBackground(brush)
        # self.recordsTableWidget.setItem(0, 4, item)
        # item = QtWidgets.QTableWidgetItem()
        # brush = QtGui.QBrush(QtGui.QColor(113, 207, 65))
        # brush.setStyle(QtCore.Qt.Dense2Pattern)
        # item.setBackground(brush)
        # self.recordsTableWidget.setItem(0, 5, item)
        # item = QtWidgets.QTableWidgetItem()
        # item.setTextAlignment(QtCore.Qt.AlignCenter)
        # brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        # brush.setStyle(QtCore.Qt.SolidPattern)
        # item.setBackground(brush)
        # self.recordsTableWidget.setItem(0, 6, item)
        # item = QtWidgets.QTableWidgetItem()
        # brush = QtGui.QBrush(QtGui.QColor(113, 207, 65))
        # brush.setStyle(QtCore.Qt.Dense2Pattern)
        # item.setBackground(brush)
        # brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        # brush.setStyle(QtCore.Qt.Dense2Pattern)
        # item.setForeground(brush)
        # self.recordsTableWidget.setItem(0, 7, item)
        # item = QtWidgets.QTableWidgetItem()
        # item.setTextAlignment(QtCore.Qt.AlignCenter)
        # self.recordsTableWidget.setItem(0, 8, item)
        # item = QtWidgets.QTableWidgetItem()
        # item.setTextAlignment(QtCore.Qt.AlignJustify | QtCore.Qt.AlignVCenter)
        # self.recordsTableWidget.setItem(0, 9, item)
        self.recordsTableWidget.horizontalHeader().setVisible(True)
        self.recordsTableWidget.horizontalHeader().setCascadingSectionResizes(True)
        self.recordsTableWidget.horizontalHeader().setDefaultSectionSize(190)
        self.recordsTableWidget.horizontalHeader().setHighlightSections(False)
        self.recordsTableWidget.horizontalHeader().setMinimumSectionSize(190)
        self.recordsTableWidget.horizontalHeader().setSortIndicatorShown(False)
        self.recordsTableWidget.horizontalHeader().setStretchLastSection(True)
        self.recordsTableWidget.verticalHeader().setVisible(True)
        self.recordsTableWidget.verticalHeader().setCascadingSectionResizes(True)
        self.recordsTableWidget.verticalHeader().setDefaultSectionSize(39)
        self.recordsTableWidget.verticalHeader().setMinimumSectionSize(39)
        self.recordsTableWidget.verticalHeader().setSortIndicatorShown(False)
        self.recordsTableWidget.verticalHeader().setStretchLastSection(False)
        self.horizontalLayout.addWidget(self.recordsTableWidget)
        self.verticalLayout_3.addWidget(self.bodyFrame)
        self.footerLayout = QtWidgets.QHBoxLayout()
        self.footerLayout.setObjectName("footerLayout")
        spacerItem4 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.footerLayout.addItem(spacerItem4)
        self.totalPeopleLayout = QtWidgets.QHBoxLayout()
        self.totalPeopleLayout.setContentsMargins(10, 10, 10, 10)
        self.totalPeopleLayout.setObjectName("totalPeopleLayout")
        self.totalPeopleLabel = QtWidgets.QLabel(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.totalPeopleLabel.sizePolicy().hasHeightForWidth())
        self.totalPeopleLabel.setSizePolicy(sizePolicy)
        self.totalPeopleLabel.setMinimumSize(QtCore.QSize(140, 20))
        self.totalPeopleLabel.setMaximumSize(QtCore.QSize(140, 20))
        font = QtGui.QFont()
        font.setPointSize(17)
        self.totalPeopleLabel.setFont(font)
        self.totalPeopleLabel.setStyleSheet("background:#ffffff;\n"
                                            "color:#000000;")
        self.totalPeopleLabel.setAlignment(QtCore.Qt.AlignCenter)
        self.totalPeopleLabel.setObjectName("totalPeopleLabel")
        self.totalPeopleLayout.addWidget(self.totalPeopleLabel)
        self.putTotalPeopleLabel = QtWidgets.QLabel(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.putTotalPeopleLabel.sizePolicy().hasHeightForWidth())
        self.putTotalPeopleLabel.setSizePolicy(sizePolicy)
        self.putTotalPeopleLabel.setMinimumSize(QtCore.QSize(60, 30))
        self.putTotalPeopleLabel.setMaximumSize(QtCore.QSize(60, 30))
        font = QtGui.QFont()
        font.setPointSize(19)
        self.putTotalPeopleLabel.setFont(font)
        self.putTotalPeopleLabel.setStyleSheet("QLabel {\n"
                                               "    border: 2px rounded;\n"
                                               "    border-color: rgb(57, 57, 57);\n"
                                               "    border-radius: 8px;\n"
                                               "    border-style: outset;\n"
                                               "    background-color: #ffffff;\n"
                                               "    padding: 5 px;\n"
                                               "    color:#000000;\n"
                                               "}")
        self.putTotalPeopleLabel.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.putTotalPeopleLabel.setFrameShadow(QtWidgets.QFrame.Plain)
        self.putTotalPeopleLabel.setLineWidth(2)
        self.putTotalPeopleLabel.setAlignment(QtCore.Qt.AlignCenter)
        self.putTotalPeopleLabel.setObjectName("putTotalPeopleLabel")
        self.totalPeopleLayout.addWidget(self.putTotalPeopleLabel)
        self.footerLayout.addLayout(self.totalPeopleLayout)
        spacerItem5 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.footerLayout.addItem(spacerItem5)
        self.evacuatePushButton = QtWidgets.QPushButton(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.evacuatePushButton.sizePolicy().hasHeightForWidth())
        self.evacuatePushButton.setSizePolicy(sizePolicy)
        self.evacuatePushButton.setMinimumSize(QtCore.QSize(110, 32))
        self.evacuatePushButton.setMaximumSize(QtCore.QSize(110, 32))
        font = QtGui.QFont()
        font.setPointSize(15)
        self.evacuatePushButton.setFont(font)
        self.evacuatePushButton.setStyleSheet("QPushButton{\n"
                                              "    padding: 0px 10px 0px 10px;\n"
                                              "    background: rgb(252, 71, 31);\n"
                                              "    color: #ffffff;\n"
                                              "    border:1px rounded #232323;\n"
                                              "    border-radius: 10px;\n"
                                              "    border-style: outset;\n"
                                              "}\n"
                                              "\n"
                                              "QPushButton:hover {\n"
                                              "    background: rgb(228, 37, 15);\n"
                                              "    }\n"
                                              "\n"
                                              "QPushButton:pressed {\n"
                                              "    border-style: inset;\n"
                                              "    background: rgb(214, 218, 218);\n"
                                              "    }")
        icon3 = QtGui.QIcon()
        icon3.addPixmap(QtGui.QPixmap(":/usedIcons/icons8-sign-out-30.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.evacuatePushButton.setIcon(icon3)
        self.evacuatePushButton.setIconSize(QtCore.QSize(18, 18))
        self.evacuatePushButton.setObjectName("evacuatePushButton")
        self.footerLayout.addWidget(self.evacuatePushButton)
        spacerItem6 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.footerLayout.addItem(spacerItem6)
        self.totalMoneyLayout = QtWidgets.QHBoxLayout()
        self.totalMoneyLayout.setContentsMargins(10, 10, 10, 10)
        self.totalMoneyLayout.setObjectName("totalMoneyLayout")
        self.totalMoneyLabel = QtWidgets.QLabel(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.totalMoneyLabel.sizePolicy().hasHeightForWidth())
        self.totalMoneyLabel.setSizePolicy(sizePolicy)
        self.totalMoneyLabel.setMinimumSize(QtCore.QSize(90, 20))
        self.totalMoneyLabel.setMaximumSize(QtCore.QSize(90, 20))
        font = QtGui.QFont()
        font.setPointSize(17)
        self.totalMoneyLabel.setFont(font)
        self.totalMoneyLabel.setStyleSheet("background:#ffffff;\n"
                                           "color:#000000;")
        self.totalMoneyLabel.setAlignment(QtCore.Qt.AlignCenter)
        self.totalMoneyLabel.setObjectName("totalMoneyLabel")
        self.totalMoneyLayout.addWidget(self.totalMoneyLabel)
        self.putTotalMoneyLabel = QtWidgets.QLabel(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.putTotalMoneyLabel.sizePolicy().hasHeightForWidth())
        self.putTotalMoneyLabel.setSizePolicy(sizePolicy)
        self.putTotalMoneyLabel.setMinimumSize(QtCore.QSize(150, 30))
        self.putTotalMoneyLabel.setMaximumSize(QtCore.QSize(150, 30))
        font = QtGui.QFont()
        font.setPointSize(19)
        self.putTotalMoneyLabel.setFont(font)
        self.putTotalMoneyLabel.setStyleSheet("QLabel {\n"
                                              "    border: 2px rounded;\n"
                                              "    border-color: rgb(57, 57, 57);\n"
                                              "    border-radius: 8px;\n"
                                              "    border-style: outset;\n"
                                              "    background-color: #ffffff;\n"
                                              "    padding: 5 px;\n"
                                              "    color:#000000;\n"
                                              "}")
        self.putTotalMoneyLabel.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.putTotalMoneyLabel.setFrameShadow(QtWidgets.QFrame.Plain)
        self.putTotalMoneyLabel.setLineWidth(2)
        self.putTotalMoneyLabel.setAlignment(QtCore.Qt.AlignCenter)
        self.putTotalMoneyLabel.setObjectName("putTotalMoneyLabel")
        self.totalMoneyLayout.addWidget(self.putTotalMoneyLabel)
        self.footerLayout.addLayout(self.totalMoneyLayout)
        spacerItem7 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.footerLayout.addItem(spacerItem7)
        self.verticalLayout_3.addLayout(self.footerLayout)
        mainWindow.setCentralWidget(self.centralwidget)
        self.statusbar = QtWidgets.QStatusBar(mainWindow)
        self.statusbar.setObjectName("statusbar")
        mainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(mainWindow)
        QtCore.QMetaObject.connectSlotsByName(mainWindow)

        # Connecting buttons with pages
        self.crud_recordPushButton.clicked.connect(self.launchRegister)
        # self.crud_editPushButton.clicked.connect(self.launchEdit)
        # self.evacuatePushButton.clicked.connect(self.launchEvacuate)

        # Search button connections
        self.searchRecordPushButton.clicked.connect(self.search)

    def retranslateUi(self, mainWindow):
        _translate = QtCore.QCoreApplication.translate
        mainWindow.setWindowTitle(_translate("mainWindow", "Arenero PlayKids "))
        mainWindow.setToolTip(_translate("mainWindow", "Dinero Total"))
        self.searchLineEdit.setPlaceholderText(_translate("mainWindow", placeholders['PH_SEARCH_RECORD']))
        self.searchRecordParameterComboBox.setItemText(0, _translate("mainWindow", "Seleccionar"))
        self.searchRecordParameterComboBox.setItemText(1, _translate("mainWindow", "Index"))
        self.searchRecordParameterComboBox.setItemText(2, _translate("mainWindow", "Nombre"))
        self.searchRecordParameterComboBox.setItemText(3, _translate("mainWindow", "No. manilla"))
        self.searchRecordParameterComboBox.setItemText(4, _translate("mainWindow", "Tiempo total"))
        self.searchRecordParameterComboBox.setItemText(5, _translate("mainWindow", "Hora entrada"))
        self.searchRecordParameterComboBox.setItemText(6, _translate("mainWindow", "Hora salida"))
        self.searchRecordParameterComboBox.setItemText(7, _translate("mainWindow", "Sale"))
        self.searchRecordParameterComboBox.setItemText(8, _translate("mainWindow", "Valor a pagar"))
        self.searchRecordParameterComboBox.setItemText(9, _translate("mainWindow", "Cancelado"))
        self.searchRecordParameterComboBox.setItemText(10, _translate("mainWindow", "Acudiente"))
        self.searchRecordParameterComboBox.setItemText(11, _translate("mainWindow", "Acudiente-ID"))
        self.searchRecordParameterComboBox.setItemText(12, _translate("mainWindow", "Listar"))

        self.crudLabel_2.setToolTip(_translate("mainWindow", "Opciones para registros independientes"))
        self.crudLabel_2.setText(_translate("mainWindow", "MANIPULAR USUARIOS REGISTRADOS"))
        self.crud_recordPushButton.setToolTip(_translate("mainWindow", "Registrar usuario"))
        self.crud_recordPushButton.setText(_translate("mainWindow", "REGISTRAR"))
        self.crud_editPushButton.setToolTip(_translate("mainWindow", "Editar"))
        self.crud_editPushButton.setText(_translate("mainWindow", "EDITAR"))
        self.recordsTableWidget.setToolTip(_translate("mainWindow", "Usarios ingresados al arenero"))
        self.recordsTableWidget.setSortingEnabled(False)
        # item = self.recordsTableWidget.verticalHeaderItem(0)
        # item.setText(_translate("mainWindow", "1"))
        item = self.recordsTableWidget.horizontalHeaderItem(0)
        item.setText(_translate("mainWindow", "Nombre"))
        item = self.recordsTableWidget.horizontalHeaderItem(1)
        item.setText(_translate("mainWindow", "Numero de manilla"))
        item = self.recordsTableWidget.horizontalHeaderItem(2)
        item.setText(_translate("mainWindow", "Tiempo"))
        item = self.recordsTableWidget.horizontalHeaderItem(3)
        item.setText(_translate("mainWindow", "Hora de entrada"))
        item = self.recordsTableWidget.horizontalHeaderItem(4)
        item.setText(_translate("mainWindow", "Hora estimada de salida"))
        item = self.recordsTableWidget.horizontalHeaderItem(5)
        item.setText(_translate("mainWindow", "Sale"))
        item = self.recordsTableWidget.horizontalHeaderItem(6)
        item.setText(_translate("mainWindow", "Valor a pagar"))
        item = self.recordsTableWidget.horizontalHeaderItem(7)
        item.setText(_translate("mainWindow", "Cancelado"))
        item = self.recordsTableWidget.horizontalHeaderItem(8)
        item.setText(_translate("mainWindow", "Acudiente"))
        item = self.recordsTableWidget.horizontalHeaderItem(9)
        item.setText(_translate("mainWindow", "Acudiente-ID"))
        __sortingEnabled = self.recordsTableWidget.isSortingEnabled()
        self.recordsTableWidget.setSortingEnabled(False)
        # item = self.recordsTableWidget.item(0, 0)
        # item.setText(_translate("mainWindow", "Miguel Angel Lopez Fernandez"))
        # item = self.recordsTableWidget.item(0, 1)
        # item.setText(_translate("mainWindow", "34"))
        # item = self.recordsTableWidget.item(0, 2)
        # item.setText(_translate("mainWindow", "00:00"))
        # item = self.recordsTableWidget.item(0, 3)
        # item.setText(_translate("mainWindow", "00:00"))
        # item = self.recordsTableWidget.item(0, 4)
        # item.setText(_translate("mainWindow", "00:00"))
        # item = self.recordsTableWidget.item(0, 6)
        # item.setText(_translate("mainWindow", "$0"))
        # item = self.recordsTableWidget.item(0, 8)
        # item.setText(_translate("mainWindow", "Lina Fernandez"))
        # item = self.recordsTableWidget.item(0, 9)
        # item.setText(_translate("mainWindow", "1004718953"))
        self.recordsTableWidget.setSortingEnabled(__sortingEnabled)
        self.totalPeopleLabel.setText(_translate("mainWindow", "Total de personas"))
        self.putTotalPeopleLabel.setText(_translate("mainWindow", placeholders['PH_TOTAL_USERS']))
        self.evacuatePushButton.setToolTip(_translate("mainWindow", "Evacuar usuarios"))
        self.evacuatePushButton.setText(_translate("mainWindow", "EVACUAR"))
        self.totalMoneyLabel.setText(_translate("mainWindow", "Dinero total"))
        self.putTotalMoneyLabel.setText(_translate("mainWindow", placeholders['PH_TOTAL_MONEY']))

        ##Launch view methods

    def launchRegister(self):
        self.viewRegister = register.UiForm()
        self.viewRegister.showRegister()

    #
    # def launchSearch(self):
    #     self.viewSearch = search.Ui_Form()
    #     self.viewSearch.showSearch()
    #
    # def launchEdit(self):
    #     self.viewEdit = edit.Ui_Form()
    #     self.viewEdit.showEdit()
    #
    # def launchEvacuate(self):
    #     self.viewEvacuate = evacuate.Ui_Form()
    #     self.viewEvacuate.showEvacuate()
    def search(self):
        # TODO: create a shortcut with enter key, when pressed, call this
        global usersResultedFromSearch
        searchParameter = self.searchRecordParameterComboBox.currentText()
        if searchParameter == "Listar":
            print("-> BUSQUEDA REALIZADA: Cargando TODOS los usuarios registrados")
            self.loadUsers(dataToLoadSpec="users")
        else:
            #at the momment, param could be anything except Index
            value = self.searchLineEdit.text().strip()
            print(
                f"-> BUSQUEDA REALIZADA: Cargando TODOS los usuarios que cumplen el criterio ({searchParameter}, {value})")
            usersResultedFromSearch = searchUsersByParams(value, searchParameter)
            self.loadUsers(dataToLoadSpec="usersResultedFromSearch")

    def cleanUpUsersTable(self):
        self.recordsTableWidget.clearContents()
        self.recordsTableWidget.setRowCount(0)

    def showPopUp(self, show_text, message_type):
        message = QMessageBox()
        # message.windowIcon()
        message.setWindowTitle("Arenero PlayKids")
        message.setText(show_text)
        message.setIcon(message_type)
        message.setStandardButtons(QMessageBox.Ok | QMessageBox.Cancel)
        retval = message.exec_()


    def loadUsers(self, dataToLoadSpec):
        global users, usersResultedFromSearch

        allData = [users,usersResultedFromSearch]
        dataToLoadIndex = 0

        self.cleanUpUsersTable()

        if dataToLoadSpec == "users":
            dataToLoadIndex = 0
        elif dataToLoadSpec == "usersResultedFromSearch":
            dataToLoadIndex = 1

        totalUsers = len(allData[dataToLoadIndex])
        if totalUsers == 0:
            message = "No se encontraron usuarios!!\nVerifica la busqueda realizada y\o si has hecho algún registro."
            self.showPopUp(message, QMessageBox.Warning)
            return
        else:
            #setting the row-size and initial row index
            self.recordsTableWidget.setRowCount(totalUsers)
            rowCount = 0  # Start with one because of the default item

            # style for sale and payed cells
            #TODO: Here goes the verification of payed and sale, one related with count time, the other one goes with checkbox
            brushBackground = QtGui.QBrush(QtGui.QColor(113, 207, 65))
            brushBackground.setStyle(QtCore.Qt.Dense2Pattern)
            brushForeground = QtGui.QBrush(QtGui.QColor(0, 0, 0))
            brushForeground.setStyle(QtCore.Qt.Dense2Pattern)

            print("CARGANDO USUARIOS ... ")

            for user in allData[dataToLoadIndex]:
                self.recordsTableWidget.setVerticalHeaderItem(rowCount, QtWidgets.QTableWidgetItem(
                    str(getAttribute(user, "index"))))
                self.recordsTableWidget.setItem(rowCount, 0, QtWidgets.QTableWidgetItem(getAttribute(user, "name")))
                self.recordsTableWidget.setItem(rowCount, 1, QtWidgets.QTableWidgetItem(
                    getAttribute(user, "braceletNumber")))
                self.recordsTableWidget.setItem(rowCount, 2, QtWidgets.QTableWidgetItem(getAttribute(user, "totalTime")))
                #TODO: Count time Module needed
                self.recordsTableWidget.setItem(rowCount, 3, QtWidgets.QTableWidgetItem(
                    str(getAttribute(user, "entryHour"))))
                self.recordsTableWidget.setItem(rowCount, 4, QtWidgets.QTableWidgetItem(
                    str(getAttribute(user, "exitHour"))))
                self.recordsTableWidget.setItem(rowCount, 5, QtWidgets.QTableWidgetItem()) # str(getAttribute(user, "userTimeDone"), this is  not shown
                self.recordsTableWidget.setItem(rowCount, 6, QtWidgets.QTableWidgetItem(str(getAttribute(user, "money"))))
                self.recordsTableWidget.setItem(rowCount, 7, QtWidgets.QTableWidgetItem()) # getAttribute(user, "payed"), this is not shown
                self.recordsTableWidget.setItem(rowCount, 8, QtWidgets.QTableWidgetItem(getAttribute(user, "parent")))
                self.recordsTableWidget.setItem(rowCount, 9, QtWidgets.QTableWidgetItem(getAttribute(user, "parentID")))

                #Giving proper style

                self.recordsTableWidget.item(rowCount,5).setBackground(brushBackground)
                self.recordsTableWidget.item(rowCount, 5).setForeground(brushForeground)
                self.recordsTableWidget.item(rowCount, 7).setBackground(brushBackground)
                self.recordsTableWidget.item(rowCount, 7).setForeground(brushForeground)
                rowCount += 1

            #Updating indicators
            self.updateIndicators(totalUsers=totalUsers, totalMoney=calcTotalMoney(allData[dataToLoadIndex]))

            print("USUARIOS MOSTRADOS SATISFACTORIAMENTE")

    def updateIndicators(self, **kwargs):
        self.putTotalPeopleLabel.setText(placeholders['PH_TOTAL_USERS'] if kwargs['totalUsers'] == 0
                                         else str(kwargs['totalUsers']))
        self.putTotalMoneyLabel.setText(placeholders['PH_TOTAL_MONEY'] if kwargs['totalMoney'] == 0 else str(kwargs['totalMoney']))

# TODO: fix someway the recommended Typos and PEP highlights
# TODO: Fix evacuate putting cancelado option and connecting to main
